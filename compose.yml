services:
  postgres:
    image: postgres:15
    expose:
      - 5432
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${BAKPGS3_DB_DATABASE}
      POSTGRES_PASSWORD: ${BAKPGS3_DB_PASSWORD}
      POSTGRES_USER: ${BAKPGS3_DB_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${BAKPGS3_DB_USER}"]
      interval: 1s
      timeout: 2s
      retries: 30
      start_period: 2s

  backup:
    image: pxjam/backup-postgres-s3:latest
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      BAKPGS3_DB_DATABASE: ${BAKPGS3_DB_DATABASE}
      BAKPGS3_DB_HOST: ${BAKPGS3_DB_HOST}
      BAKPGS3_DB_USER: ${BAKPGS3_DB_USER}
      BAKPGS3_DB_PASSWORD: ${BAKPGS3_DB_PASSWORD}
      BAKPGS3_PROJECT_NAME: ${BAKPGS3_PROJECT_NAME}
      BAKPGS3_S3_BUCKET: ${BAKPGS3_S3_BUCKET}
      BAKPGS3_S3_ENDPOINT: ${BAKPGS3_S3_ENDPOINT}
      BAKPGS3_S3_REGION: ${BAKPGS3_S3_REGION}
      BAKPGS3_S3_ACCESS_KEY: ${BAKPGS3_S3_ACCESS_KEY}
      BAKPGS3_S3_SECRET_KEY: ${BAKPGS3_S3_SECRET_KEY}
    volumes:
      - ./logs:/app/logs

  minio:
    image: 'minio/minio:latest'
    ports:
      - '${FORWARD_MINIO_PORT:-9000}:9000'
      - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
    environment:
      MINIO_ROOT_USER: test
      MINIO_ROOT_PASSWORD: password
    command: 'minio server /data/minio --console-address ":8900"'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1s
      timeout: 2s
      retries: 30
      start_period: 2s

  minio-client:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 test password) do echo 'waiting for minio'; sleep 2; done;
      /usr/bin/mc mb myminio/${BAKPGS3_S3_BUCKET};
      "
